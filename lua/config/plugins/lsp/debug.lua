return {
	-- {
	-- 	"mfussenegger/nvim-dap",
	-- 	dependencies = {
	-- 		-- Ensure C/C++ debugger is installed
	-- 		"williamboman/mason.nvim",
	-- 		opts = { ensure_installed = { "codelldb" } },
	-- 	},
	-- 	opts = function()
	-- 		local dap = require("dap")
	-- 		if not dap.adapters["codelldb"] then
	-- 			require("dap").adapters["codelldb"] = {
	-- 				type = "server",
	-- 				host = "localhost",
	-- 				port = "${port}",
	-- 				executable = {
	-- 					command = "codelldb",
	-- 					args = {
	-- 						"--port",
	-- 						"${port}",
	-- 					},
	-- 				},
	-- 			}
	-- 		end
	-- 		for _, lang in ipairs({ "c", "cpp" }) do
	-- 			dap.configurations[lang] = {
	-- 				{
	-- 					type = "codelldb",
	-- 					request = "launch",
	-- 					name = "Launch file",
	-- 					program = function()
	-- 						return vim.fn.input("Path to executable: ", vim.fn.getcwd() .. "/", "file")
	-- 					end,
	-- 					cwd = "${workspaceFolder}",
	-- 				},
	-- 				{
	-- 					type = "codelldb",
	-- 					request = "attach",
	-- 					name = "Attach to process",
	-- 					pid = require("dap.utils").pick_process,
	-- 					cwd = "${workspaceFolder}",
	-- 				},
	-- 			}
	-- 		end
	-- 	end,
	-- },
	-- {
	-- 	"rcarriga/nvim-dap-ui",
	-- 	dependencies = { "nvim-neotest/nvim-nio", {
	-- 		"theHamsta/nvim-dap-virtual-text",
	-- 		opts = {},
	-- 	} },
	--  -- stylua: ignore
	--    keys = {
	--      { "<leader>du", function() require("dapui").toggle({ }) end, desc = "Dap UI" },
	--      { "<leader>de", function() require("dapui").eval() end, desc = "Eval", mode = {"n", "v"} },
	--    },
	-- 	opts = {},
	-- 	config = function(_, opts)
	-- 		local dap = require("dap")
	-- 		local dapui = require("dapui")
	-- 		dapui.setup(opts)
	-- 		dap.listeners.after.event_initialized["dapui_config"] = function()
	-- 			dapui.open({})
	-- 		end
	-- 		dap.listeners.before.event_terminated["dapui_config"] = function()
	-- 			dapui.close({})
	-- 		end
	-- 		dap.listeners.before.event_exited["dapui_config"] = function()
	-- 			dapui.close({})
	-- 		end
	-- 	end,
	-- },
}
